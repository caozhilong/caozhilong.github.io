I"~<h1 id="两种自定义xsd文件eclipse进行分析验证的方式">两种自定义XSD文件Eclipse进行分析验证的方式</h1>

<h2 id="摘要">摘要</h2>

<p>  在开发时，常常需要其他的开发人员进行配置XML，然而如验证第N方人员配置的XML是否正确。一般情况下，当XML配置文件内容较少时，使用手工的方式验证XML的内容是否正确非常容易，然而当配置内容和配置的XML非常多时，使用使用手工验证配置文件就有点费劲了。</p>

<p>  基于上述描述的场景，如何让程序进行分析验证XML文档是否正确的方式呢？在这里个人介绍两种自定义XSD文件Eclipse进行分析验证XML文档方式,可以根据情况选择两者之一来完成:</p>

<ol>
  <li><strong>方法1：通过在项目中包含XML Schema文件来实现</strong></li>
  <li><strong>方法2：用Eclipse插件实现</strong></li>
</ol>

<h2 id="方法1通过在项目中包含xml-schema文件来实现"><strong>方法1：通过在项目中包含XML Schema文件来实现</strong></h2>

<h3 id="第一步定义一个xsd描述文档限制xml每个标签应该填充的内容">第一步，定义一个XSD描述文档限制XML每个标签应该填充的内容</h3>

<p>foo.xsd</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;xsd:schema</span> <span class="na">xmlns:xsd=</span><span class="s">"http://www.w3.org/2001/XMLSchema"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;xsd:element</span> <span class="na">name=</span><span class="s">"foobar"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;xsd:complexType&gt;</span>
      <span class="nt">&lt;xsd:sequence&gt;</span>
        〜
      <span class="nt">&lt;/xsd:sequence&gt;</span>
    <span class="nt">&lt;/xsd:complexType&gt;</span>
  <span class="nt">&lt;/xsd:element&gt;</span>
<span class="nt">&lt;/xsd:schema&gt;</span>
</code></pre></div></div>

<h3 id="第二步创建一个xml引入前面创建的fooxsd文件">第二步，创建一个xml引入前面创建的foo.xsd文件</h3>

<p>XXMap.xml</p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;foobar</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span> <span class="na">xsi:noNamespaceSchemaLocation=</span><span class="s">"foo.xsd"</span><span class="nt">&gt;</span>
  〜
<span class="nt">&lt;/foobar&gt;</span>
</code></pre></div></div>

<h3 id="第三步以eclipse为例">第三步，以Eclipse为例</h3>

<p>  选中XXMap.xml的文件，右键打开验证选项(未汉化的请选择validation)，即可验证XML文档是否符合要求</p>

<h2 id="方法2用eclipse插件实现"><strong>方法2：用Eclipse插件实现</strong></h2>

<p>  假设XMLSchema名称为 http://caozhilong.github.io/sample/XMLSchema/foo.xsd</p>

<h3 id="创建一个eclipse插件作用使eclipse有fooxsd文档">创建一个Eclipse插件(作用使Eclipse有foo.xsd文档)</h3>

<ol>
  <li>选择主菜单上的“文件”</li>
  <li>从“文件”菜单中选择“新建”</li>
  <li>从“新建”菜单中选择“项目…”</li>
  <li>从“选择向导”对话框中选择“插件项目”</li>
  <li>在标有“插件项目”的页面上写上项目名称</li>
  <li>取消选中同一页面上的“创建Java项目”复选框</li>
  <li>按下同一页面上的“下一步”按钮</li>
  <li>按“完成”按钮</li>
  <li>将plugin.xml添加到创建的项目</li>
  <li>选择plugin.xml的“Summary”选项卡并选中“Singleton this plugin”复选框</li>
  <li>在项目下创建一个xsd文件夹</li>
  <li>使xsd/foo.xsd，plugin.xml，build.properties如下</li>
  <li>双击plugin.xml并选择出现的屏幕的“Overview”选项卡</li>
  <li>在“概览”选项卡上的“导出向导”中创建一个插件</li>
  <li>将作为插件创建的jar文件存储在Eclipse的Plugins文件夹中</li>
  <li>重新启动Eclipse</li>
</ol>

<p><strong>xsd/foo.xsd</strong></p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;xsd:schema</span> <span class="na">xmlns:xsd=</span><span class="s">"http://www.w3.org/2001/XMLSchema"</span><span class="nt">&gt;</span>
  <span class="nt">&lt;xsd:element</span> <span class="na">name=</span><span class="s">"foobar"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;xsd:complexType&gt;</span>
      <span class="nt">&lt;xsd:sequence&gt;</span>
        〜
      <span class="nt">&lt;/xsd:sequence&gt;</span>
    <span class="nt">&lt;/xsd:complexType&gt;</span>
  <span class="nt">&lt;/xsd:element&gt;</span>
<span class="nt">&lt;/xsd:schema&gt;</span>
</code></pre></div></div>
<p><strong>plugin.xml</strong></p>

<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="UTF-8"?&gt;</span>
<span class="cp">&lt;?eclipse version="3.4"?&gt;</span>
<span class="nt">&lt;plugin&gt;</span>
  <span class="nt">&lt;extension</span> <span class="na">point=</span><span class="s">"org.eclipse.wst.xml.core.catalogContributions"</span><span class="nt">&gt;</span>
    <span class="nt">&lt;catalogContribution&gt;</span>
      <span class="c">&lt;!-- 链接的XML模式名称和XSD文件 --&gt;</span>
      <span class="nt">&lt;system</span> <span class="na">systemId=</span><span class="s">"http://caozhilong.github.io/sample/XMLSchema/foo.xsd"</span>
              <span class="na">uri=</span><span class="s">"xsd/foo.xsd"</span><span class="nt">/&gt;</span>
      <span class="c">&lt;!-- 如果你有一个以上的XML模式，填补了系统标签继续在这里 --&gt;</span>
    <span class="nt">&lt;/catalogContribution&gt;</span>
  <span class="nt">&lt;/extension&gt;</span>
<span class="nt">&lt;/plugin&gt;</span>
</code></pre></div></div>
<p><strong>build.properties</strong></p>

<div class="language-properties highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="c"># META-INF/MANIFEST.MF和XML模式文件，设置包括在插件在plugin.xml 
</span><span class="py">bin.includes</span> <span class="p">=</span> <span class="s">META-INF/,</span><span class="se">\
</span>               <span class="s">.,</span><span class="se">\
</span>               <span class="s">xsd/,</span><span class="se">\
</span>               <span class="s">plugin.xml</span>
</code></pre></div></div>

<h3 id="编写一个xml文件">编写一个XML文件</h3>

<p>  <strong>用XSD编写XML模式</strong></p>

<p><strong>XXMap.xml</strong></p>
<div class="language-xml highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="cp">&lt;?xml version="1.0" encoding="utf-8"?&gt;</span>
<span class="nt">&lt;foobar</span> <span class="na">xmlns:xsi=</span><span class="s">"http://www.w3.org/2001/XMLSchema-instance"</span>
        <span class="na">xmlns=</span><span class="s">"http://caozhilong.github.io/sample/XMLSchema"</span>
        <span class="na">xsi:schemaLocation=</span><span class="s">"http://caozhilong.github.io/sample/XMLSchema http://caozhilong.github.io/sample/XMLSchema/foo.xsd"</span><span class="nt">&gt;</span>
  〜
<span class="nt">&lt;/foobar&gt;</span>
</code></pre></div></div>

<h3 id="确认xml存放的目录">确认XML存放的目录</h3>

<p>  <strong>请从Eclipse设置中显示XML目录。</strong>，设置引入xsd文件存放的目录；请确保列出自己的XSD文件被Eclipse加载</p>

<h3 id="使用eclipse进行验证">使用Eclipse进行验证</h3>

<p>  选中XXMap.xml的文件，右键打开验证选项(未汉化的请选择validation)，即可验证XML文档是否符合要求</p>
:ET