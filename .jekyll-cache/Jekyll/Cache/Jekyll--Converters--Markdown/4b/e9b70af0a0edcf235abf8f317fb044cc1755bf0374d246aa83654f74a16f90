I"%#<h1 id="curl和wget常用命令">curl和wget常用命令</h1>

<h1 id="参考资料">参考资料</h1>
<ul>
  <li>https://gist.github.com/303182519/132568fd0e58cae57202#file-curl-md</li>
  <li>http://bbs.et8.net/bbs/showthread.php?t=568472</li>
  <li>http://www.ruanyifeng.com/blog/2011/09/curl.html</li>
</ul>

<h3 id="下载单个文件默认将输出打印到标准输出中stdout中">下载单个文件，默认将输出打印到标准输出中(STDOUT)中</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://www.centos.org
</code></pre></div></div>

<h3 id="通过-o-o选项保存下载的文件到指定的文件中">通过-o/-O选项保存下载的文件到指定的文件中：</h3>
<blockquote>
  <ol>
    <li>-o：将文件保存为命令行中指定的文件名的文件中</li>
    <li>-O：使用URL中默认的文件名保存文件到本地</li>
  </ol>
</blockquote>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 将文件下载到本地并命名为mygettext.html
  curl -o mygettext.html http://www.gnu.org/software/gettext/manual/gettext.html
 
# 将文件保存到本地并命名为gettext.html
  curl -O http://www.gnu.org/software/gettext/manual/gettext.html
</code></pre></div></div>

<p>同样可以使用转向字符”&gt;”对输出进行转向输出</p>

<h3 id="同时获取多个文件">同时获取多个文件</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -O URL1 -O URL2
</code></pre></div></div>

<p>若同时从同一站点下载多个文件时，curl会尝试重用链接(connection)。</p>

<p>通过-L选项进行重定向
默认情况下CURL不会发送HTTP Location headers(重定向).当一个被请求页面移动到另一个站点时，会发送一个HTTP Loaction header作为请求，然后将请求重定向到新的地址上。
例如：访问google.com时，会自动将地址重定向到google.com.hk上。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl http://www.google.com
&lt;HTML&gt;
&lt;HEAD&gt;
    &lt;meta http-equiv="content-type" content="text/html;charset=utf-8"&gt;
    &lt;TITLE&gt;302 Moved&lt;/TITLE&gt;
&lt;/HEAD&gt;
&lt;BODY&gt;
    &lt;H1&gt;302 Moved&lt;/H1&gt;
    The document has moved
    &lt;A HREF="http://www.google.com.hk/url?sa=p&amp;amp;hl=zh-CN&amp;amp;pref=hkredirect&amp;amp;pval=yes&amp;amp;q=http://www.google.com.hk/&amp;amp;ust=1379402837567135amp;usg=AFQjCNF3o7umf3jyJpNDPuF7KTibavE4aA"&gt;here&lt;/A&gt;.
&lt;/BODY&gt;
&lt;/HTML&gt;
</code></pre></div></div>

<p>上述输出说明所请求的档案被转移到了http://www.google.com.hk。</p>

<p>这是可以通过使用-L选项进行强制重定向</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>让curl使用地址重定向，此时会查询google.com.hk站点
curl -L http://www.google.com
</code></pre></div></div>

<h3 id="断点续传">断点续传</h3>

<p>通过使用-C选项可对大文件使用断点续传功能，如：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 当文件在下载完成之前结束该进程
$ curl -O http://www.gnu.org/software/gettext/manual/gettext.html
##############             20.1%

# 通过添加-C选项继续对该文件进行下载，已经下载过的文件不会被重新下载
curl -C - -O http://www.gnu.org/software/gettext/manual/gettext.html
###############            21.1%
</code></pre></div></div>

<h3 id="对curl使用网络限速">对CURL使用网络限速</h3>

<p>通过–limit-rate选项对CURL的最大网络使用进行限制</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>下载速度最大不会超过1000B/second
 
curl --limit-rate 1000B -O http://www.gnu.org/software/gettext/manual/gettext.html
</code></pre></div></div>

<p>下载指定时间内修改过的文件</p>

<p>当下载一个文件时，可对该文件的最后修改日期进行判断，如果该文件在指定日期内修改过，就进行下载，否则不下载。
该功能可通过使用-z选项来实现：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>若yy.html文件在2011/12/21之后有过更新才会进行下载
curl -z 21-Dec-11 http://www.example.com/yy.html
</code></pre></div></div>

<h3 id="curl授权">CURL授权</h3>

<p>在访问需要授权的页面时，可通过-u选项提供用户名和密码进行授权</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> curl -u username:password URL
 
 # 通常的做法是在命令行只输入用户名，之后会提示输入密码，这样可以保证在查看历史记录时不会将密码泄露
 curl -u username URL
</code></pre></div></div>

<h3 id="从ftp服务器下载文件">从FTP服务器下载文件</h3>

<p>CURL同样支持FTP下载，若在url中指定的是某个文件路径而非具体的某个要下载的文件名，CURL则会列出该目录下的所有文件名而并非下载该目录下的所有文件</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # 列出public_html下的所有文件夹和文件
 curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/
 
 # 下载xss.php文件
 curl -u ftpuser:ftppass -O ftp://ftp_server/public_html/xss.php
</code></pre></div></div>

<h3 id="上传文件到ftp服务器">上传文件到FTP服务器</h3>

<p>通过 -T 选项可将指定的本地文件上传到FTP服务器上</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 将myfile.txt文件上传到服务器
curl -u ftpuser:ftppass -T myfile.txt ftp://ftp.testserver.com

# 同时上传多个文件
curl -u ftpuser:ftppass -T "{file1,file2}" ftp://ftp.testserver.com

# 从标准输入获取内容保存到服务器指定的文件中
curl -u ftpuser:ftppass -T - ftp://ftp.testserver.com/myfile_1.txt
</code></pre></div></div>

<h3 id="获取更多信息">获取更多信息</h3>

<p>通过使用 -v 和 -trace获取更多的链接信息</p>

<h3 id="通过字典查询单词">通过字典查询单词</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># 查询bash单词的含义
curl dict://dict.org/d:bash

# 列出所有可用词典
curl dict://dict.org/show:db

# 在foldoc词典中查询bash单词的含义
curl dict://dict.org/d:bash:foldoc
</code></pre></div></div>

<h3 id="为curl设置代理">为CURL设置代理</h3>

<p>x 选项可以为CURL添加代理功能</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # 指定代理主机和端口
 curl -x proxysever.test.com:3128 http://google.co.in
</code></pre></div></div>

<h3 id="保存与使用网站cookie信息">保存与使用网站cookie信息</h3>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code> # 将网站的cookies信息保存到sugarcookies文件中
 curl -D sugarcookies http://localhost/sugarcrm/index.php
 
 # 使用上次保存的cookie信息
 curl -b sugarcookies http://localhost/sugarcrm/index.php
</code></pre></div></div>

<h3 id="传递请求数据">传递请求数据</h3>

<p>默认curl使用GET方式请求数据，这种方式下直接通过URL传递数据
可以通过 –data/-d 方式指定使用POST方式传递数据</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code># GET
curl -u username https://api.github.com/user?access_token=XXXXXXXXXX

# POST
curl -u username --data "param1=value1&amp;param2=value" https://api.github.com

# 也可以指定一个文件，将该文件中的内容当作数据传递给服务器端
curl --data @filename https://github.api.com/authorizations
</code></pre></div></div>

<p>注：默认情况下，通过POST方式传递过去的数据中若有特殊字符，首先需要将特殊字符转义在传递给服务器端，如value值中包含有空格，则需要先将空格转换成%20，如：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -d "value%201" http://hostname.com
</code></pre></div></div>

<p>在新版本的CURL中，提供了新的选项 –data-urlencode，通过该选项提供的参数会自动转义特殊字符。</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl --data-urlencode "value 1" http://hostname.com
</code></pre></div></div>

<p>除了使用GET和POST协议外，还可以通过 -X 选项指定其它协议，如：</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl -I -X DELETE https://api.github.cim
</code></pre></div></div>

<p>上传文件</p>

<div class="highlighter-rouge"><div class="highlight"><pre class="highlight"><code>curl --form "fileupload=@filename.txt" http://hostname/resource
</code></pre></div></div>
:ET