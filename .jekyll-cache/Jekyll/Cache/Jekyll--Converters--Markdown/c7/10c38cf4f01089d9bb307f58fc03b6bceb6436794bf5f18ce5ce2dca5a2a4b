I"t,<h1 id="docker入门教程六另外的15个docker命令">Docker入门教程（六）另外的15个Docker命令</h1>

<p>【编者的话】DockerOne组织翻译了Flux7的Docker入门教程，本文是系列入门教程的第六篇，继续介绍Docker命令。之前的第二篇文章中我们就介绍了一些基本的Docker命令，本文过后，你将会接触到所有的Docker常用命令。努力学习吧。</p>

<p>在<a href="http://dockerone.com/article/102">之前的文章</a>中，我们介绍了15个Docker命令，并分享了它们的实践经验。在这篇文章中，我们将学习另外的15个Docker命令。它们分别是：</p>

<p><strong>daemon</strong>：</p>

<p>Docker daemon是一个用于管理容器的后台进程。一般情况下，守护进程是一个长期运行的用来处理请求的进程服务。<code class="highlighter-rouge">-d</code>参数用于运行后台进程。</p>

<p><strong>build</strong>：</p>

<p>如之前所讨论的，可以使用Dockerfile来构建镜像。简单的构建命令如下：<br />
<code class="highlighter-rouge">docker build [options] PATH | URL</code></p>

<p>还有一些Docker提供的额外选项，如：<br />
<code class="highlighter-rouge">--rm=true</code>表示构建成功后，移除所有中间容器<br />
<code class="highlighter-rouge">--no-cache=false</code>表示在构建过程中不使用缓存</p>

<p>下面是一张使用<code class="highlighter-rouge">Docker build</code>命令的截图。</p>

<p><a href="http://dockone.io/uploads/article/20141230/b886c21482ce9b3d4f4b8ce8b7e4e3c2.png"><img src="http://dockone.io/uploads/article/20141230/b886c21482ce9b3d4f4b8ce8b7e4e3c2.png" alt="rer.png" title="rer.png" /></a><br />
<strong>attach</strong>:</p>

<p>Docker允许使用<code class="highlighter-rouge">attach</code>命令与运行中的容器交互，并且可以随时观察容器內进程的运行状况。退出容器可以通过两种方式来完成：</p>

<ul>
  <li>Ctrl+C 直接退出</li>
  <li>Ctrl-\ 退出并显示堆栈信息（stack trace）</li>
</ul>

<p><code class="highlighter-rouge">attach</code>命令的语法是：<br />
<code class="highlighter-rouge">docker attach container</code></p>

<p>下面是一张显示执行<code class="highlighter-rouge">attach</code>命令的截图。</p>

<p><a href="http://dockone.io/uploads/article/20141230/fb7694fe535b1307fb13ef5800d4ae1d.png"><img src="http://dockone.io/uploads/article/20141230/fb7694fe535b1307fb13ef5800d4ae1d.png" alt="docker-attach1.png" title="docker-attach1.png" /></a><br />
<strong>diff</strong>：</p>

<p>Docker提供了一个非常强大的命令<code class="highlighter-rouge">diff</code>，它可以列出容器内发生变化的文件和目录。这些变化包括添加（A-add）、删除（D-delete）、修改（C-change）。该命令便于Debug，并支持快速的共享环境。</p>

<p>语法是：<br />
<code class="highlighter-rouge">docker diff container</code></p>

<p>截图显示<code class="highlighter-rouge">diff</code>的执行。</p>

<p><a href="http://dockone.io/uploads/article/20141230/55423a2311f8dbc9cc0ecb8fa44cd46e.png"><img src="http://dockone.io/uploads/article/20141230/55423a2311f8dbc9cc0ecb8fa44cd46e.png" alt="docker-diff.png" title="docker-diff.png" /></a><br />
<strong>events</strong>：</p>

<p>打印指定时间内的容器的实时系统事件。</p>

<p><strong>import</strong>：</p>

<p>Docker可以导入远程文件、本地文件和目录。使用HTTP的URL从远程位置导入，而本地文件或目录的导入需要使用<code class="highlighter-rouge">-</code>参数。从远程位置导入的语法是：<br />
<code class="highlighter-rouge">docker import http://example.com/example.tar</code></p>

<p>截图表示本地文件：</p>

<p><a href="http://dockone.io/uploads/article/20141230/767fdc7859e4122143137bd27f23b6c5.png"><img src="http://dockone.io/uploads/article/20141230/767fdc7859e4122143137bd27f23b6c5.png" alt="docker-import.png" title="docker-import.png" /></a><br />
<strong>export</strong>：</p>

<p>类似于<code class="highlighter-rouge">import</code>，<code class="highlighter-rouge">export</code>命令用于将容器的系统文件打包成tar文件。</p>

<p>下图描述了其执行过程：</p>

<p><a href="http://dockone.io/uploads/article/20141230/b28a3619ed457631111008351d3a4fc6.png"><img src="http://dockone.io/uploads/article/20141230/b28a3619ed457631111008351d3a4fc6.png" alt="docker-export.png" title="docker-export.png" /></a><br />
<strong>cp</strong>：</p>

<p>这个命令是从容器内复制文件到指定的路径上。语法如下：<br />
<code class="highlighter-rouge">docker cp container:path hostpath.</code></p>

<p>截图展示了<code class="highlighter-rouge">cp</code>命令的执行。</p>

<p><a href="http://dockone.io/uploads/article/20141230/96c6492386810b96d2828bab3ba584c1.png"><img src="http://dockone.io/uploads/article/20141230/96c6492386810b96d2828bab3ba584c1.png" alt="docker-cp.png" title="docker-cp.png" /></a><br />
<strong>login</strong>：</p>

<p>此命令用来登录到Docker registry服务器，语法如下：<br />
<code class="highlighter-rouge">docker login [options] [server]</code></p>

<p>如要登录自己主机的registry请使用：<br />
<code class="highlighter-rouge">docker login localhost:8080</code></p>

<p><a href="http://dockone.io/uploads/article/20141230/71d664cc74478a070f5ff4e3fa5fbd8a.png"><img src="http://dockone.io/uploads/article/20141230/71d664cc74478a070f5ff4e3fa5fbd8a.png" alt="docker-login.png" title="docker-login.png" /></a><br />
<strong>inspect</strong>：<br />
<code class="highlighter-rouge">Docker inspect</code>命令可以收集有关容器和镜像的底层信息。这些信息包括：</p>

<ul>
  <li>容器实例的IP地址</li>
  <li>端口绑定列表</li>
  <li>特定端口映射的搜索</li>
  <li>收集配置的详细信息</li>
</ul>

<p>该命令的语法是：<br />
<code class="highlighter-rouge">docker inspect container/image</code></p>

<p><a href="http://dockone.io/uploads/article/20141230/05f8d28bd41b32d6f9afb7e5d1713fb8.png"><img src="http://dockone.io/uploads/article/20141230/05f8d28bd41b32d6f9afb7e5d1713fb8.png" alt="docker-inspect.png" title="docker-inspect.png" /></a><br />
<strong>kill</strong>：</p>

<p>发送<code class="highlighter-rouge">SIGKILL</code>信号来停止容器的主进程。语法是：<br />
<code class="highlighter-rouge">docker kill [options] container</code></p>

<p><a href="http://dockone.io/uploads/article/20141230/16b0c61902a080cd715ab233e6aaea3b.png"><img src="http://dockone.io/uploads/article/20141230/16b0c61902a080cd715ab233e6aaea3b.png" alt="docker-kill.png" title="docker-kill.png" /></a><br />
<strong>rmi</strong>：</p>

<p>该命令可以移除一个或者多个镜像，语法如下：<br />
<code class="highlighter-rouge">docker rmi image</code></p>

<p>镜像可以有多个标签链接到它。在删除镜像时，你应该确保删除所有相关的标签以避免错误。下图显示了该命令的示例。</p>

<p><a href="http://dockone.io/uploads/article/20141230/b7df2a18735558bd84f0475d523b2bd3.png"><img src="http://dockone.io/uploads/article/20141230/b7df2a18735558bd84f0475d523b2bd3.png" alt="fz.png" title="fz.png" /></a><br />
<strong>wait</strong>：</p>

<p>阻塞对指定容器的其它调用方法，直到容器停止后退出阻塞。</p>

<p><a href="http://dockone.io/uploads/article/20141230/cc0f9abfdd6e5989438fd5dccc844da5.png"><img src="http://dockone.io/uploads/article/20141230/cc0f9abfdd6e5989438fd5dccc844da5.png" alt="docker-wait.png" title="docker-wait.png" /></a><br />
<strong>load</strong>：</p>

<p>该命令从tar文件中载入镜像或仓库到<code class="highlighter-rouge">STDIN</code>。</p>

<p>截图显示载入<code class="highlighter-rouge">app_box.tar</code>到<code class="highlighter-rouge">STDIN</code>：</p>

<p><a href="http://dockone.io/uploads/article/20141230/19ae48cf3ed13149d9da1762ea52d4c1.png"><img src="http://dockone.io/uploads/article/20141230/19ae48cf3ed13149d9da1762ea52d4c1.png" alt="ff.png" title="ff.png" /></a><br />
<strong>save</strong>：</p>

<p>类似于<code class="highlighter-rouge">load</code>，该命令保存镜像为tar文件并发送到<code class="highlighter-rouge">STDOUT</code>。语法如下：<br />
<code class="highlighter-rouge">docker save image</code></p>

<p>简单截图示例如下：</p>

<p><a href="http://dockone.io/uploads/article/20141230/3eee7939884dfa8574f2a336da40cf6b.png"><img src="http://dockone.io/uploads/article/20141230/3eee7939884dfa8574f2a336da40cf6b.png" alt="docker-save.png" title="docker-save.png" /></a></p>

<h2 id="docker批量命令">docker批量命令</h2>

<p><strong>docker批量删除镜像</strong></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker <span class="nb">rm</span> <span class="si">$(</span>docker ps <span class="nt">-all</span> <span class="nt">-q</span><span class="si">)</span>
<span class="c"># -q 只返回ID列</span>
</code></pre></div></div>

<p><strong>强制所有镜像删除</strong></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker rmi <span class="si">$(</span>docker images  <span class="nt">-q</span><span class="si">)</span> <span class="nt">--force</span>
</code></pre></div></div>

<p><strong>docker 批量杀死进程</strong></p>

<div class="language-shell highlighter-rouge"><div class="highlight"><pre class="highlight"><code>docker ps |awk <span class="s1">'{print $1}'</span> |tail |xargs docker <span class="nb">kill</span>
</code></pre></div></div>

<p><a href="http://dockerone.com/article/107">Docker系列教程的下一篇文章</a>我们将探讨Docker APIs。<br />
<strong>原文链接：<a href="http://flux7.com/blogs/docker/docker-commands/">Part 6: The Next 15 Commands</a>（翻译：<a href="https://github.com/llitfkitfk">田浩浩</a> 审校：李颖杰）</strong></p>

<p>＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝＝<br />
<strong>译者介绍</strong><br />
<strong>田浩浩</strong>，<a href="http://sydney.edu.au/engineering/it/">悉尼大学USYD</a>硕士研究生，目前在珠海从事Android应用开发工作。业余时间专注Docker的学习与研究，希望通过<a href="http://dockerone.com/">DockerOne</a>把最新最优秀的译文贡献给大家，与读者一起畅游Docker的海洋。</p>

<hr />
<p><a href="http://dockerone.com/article/101">Docker入门教程（一）介绍</a><br />
<a href="http://dockerone.com/article/102">Docker入门教程（二）命令</a><br />
<a href="http://dockerone.com/article/103">Docker入门教程（三）DockerFile</a><br />
<a href="http://dockerone.com/article/104">Docker入门教程（四）Docker Registry</a><br />
<a href="http://dockerone.com/article/105">Docker入门教程（五）Docker安全</a><br />
<a href="http://dockerone.com/article/106">Docker入门教程（六）另外的15个Docker命令</a><br />
<a href="http://dockerone.com/article/107">Docker入门教程（七）Docker API</a><br />
<a href="http://dockerone.com/article/109">Docker入门教程（八）Docker Remote API</a><br />
<a href="http://dockerone.com/article/110">Docker入门教程（九）10个镜像相关的API</a></p>
:ET